[{"C:\\Users\\JEON\\ReactProjects\\react_tutorial1\\src\\index.js":"1","C:\\Users\\JEON\\ReactProjects\\react_tutorial1\\src\\reportWebVitals.js":"2","C:\\Users\\JEON\\ReactProjects\\react_tutorial1\\src\\App.js":"3","C:\\Users\\JEON\\ReactProjects\\react_tutorial1\\src\\components\\TOC.js":"4","C:\\Users\\JEON\\ReactProjects\\react_tutorial1\\src\\components\\SUBJECT.js":"5","C:\\Users\\JEON\\ReactProjects\\react_tutorial1\\src\\components\\Control.js":"6","C:\\Users\\JEON\\ReactProjects\\react_tutorial1\\src\\components\\ReadCONTENT.js":"7","C:\\Users\\JEON\\ReactProjects\\react_tutorial1\\src\\components\\CreateCONTENT.js":"8","C:\\Users\\JEON\\ReactProjects\\react_tutorial1\\src\\components\\UpdateCONTENT.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":4799,"mtime":1615904023594,"results":"13","hashOfConfig":"11"},{"size":867,"mtime":1614090848998,"results":"14","hashOfConfig":"11"},{"size":348,"mtime":1612879956081,"results":"15","hashOfConfig":"11"},{"size":830,"mtime":1614864509021,"results":"16","hashOfConfig":"11"},{"size":338,"mtime":1614864537403,"results":"17","hashOfConfig":"11"},{"size":790,"mtime":1615298969896,"results":"18","hashOfConfig":"11"},{"size":1345,"mtime":1617722054554,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"183gib1",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\JEON\\ReactProjects\\react_tutorial1\\src\\index.js",[],["40","41"],"C:\\Users\\JEON\\ReactProjects\\react_tutorial1\\src\\reportWebVitals.js",[],"C:\\Users\\JEON\\ReactProjects\\react_tutorial1\\src\\App.js",["42","43"],"// import logo from './logo.svg';\nimport React, {Component} from 'react';\nimport './App.css';\nimport Toc from \"./components/TOC\"  //TOC.js파일의 Toc클래스를 쓸 수 있게 해준다.\nimport ReadContent from \"./components/ReadCONTENT\"  //CONTENT.js파일의 Content클래스를 쓸 수 있게 해준다.\nimport Subject from \"./components/SUBJECT\"  //SUBJECT.js파일의 Subject클래스를 쓸 수 있게 해준다.\nimport Control from \"./components/Control\"  //SUBJECT.js파일의 Subject클래스를 쓸 수 있게 해준다.\nimport CreateContent from \"./components/CreateCONTENT\"\nimport UpdateContent from \"./components/UpdateCONTENT\"\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.max_content_id = 3;\n    this.state = {\n      mode:'create',\n      selected_content_id:2,\n      subject:{title:'WEB',sub:'World Wide Web'},\n      welcome:{title:\"Welcome\",desc:\"Hello, React!!\"},\n      contents:[\n        {id:1, title:\"HTML\",desc:\"HTML is HyperText ...\"},\n        {id:2, title:\"CSS\",desc:\"CSS is design ...\"},\n        {id:3, title:\"JavaScript\",desc:\"JavaScript is for interactive\"}\n      ]\n    }\n  }\n\n  getReadContent(){\n    var i = 0;\n    while(i<this.state.contents.length){\n      var data = this.state.contents[i];\n      if(data.id === this.state.selected_content_id){\n        // _title = data.title;\n        // _desc = data.desc;\n        return data;\n        break;\n      }\n      i = i+1;\n    }\n  }\n\n  getContent(){\n    var _title, _desc ,_article, _content= null;\n    if(this.state.mode === 'welcome'){\n      _title = this.state.welcome.title;\n      _desc = this.state.welcome.desc;\n      _article = <ReadContent title={_title} desc={_desc}></ReadContent>\n    } else if (this.state.mode === 'read'){\n      _content = this.getReadContent();\n      \n      // _title = this.state.contents[0].title;\n      // _desc = this.state.contents[0].desc\n      _article = <ReadContent title={_content.title} desc={_content.desc}></ReadContent>\n      \n    } else if (this.state.mode === 'create'){\n      _article = <CreateContent onSubmit={function(_title,_desc){        \n        this.max_content_id = this.max_content_id+1;\n        \n        //**push로 데이터 삽입시 기존데이터를 바꾼다.\n        // this.state.contents.push(\n        //   {id:this.max_content_id, title:_title, desc:_desc}\n        // )\n        // this.setState({\n        //   contents:this.state.contents\n        // })\n        \n        //**concat로 데이터 삽입시 기존데이터를 건드리지 않는다.\n        var _contents = this.state.contents.concat(\n          {id:this.max_content_id, title:_title, desc:_desc}\n        )\n        this.setState({\n          contents:_contents\n        })\n               \n      }.bind(this)}></CreateContent>\n    }else if (this.state.mode === 'update'){\n      _content = this.getReadContent();\n      _article = <UpdateContent data={_content} onSubmit={function(_title,_desc){        \n        this.max_content_id = this.max_content_id+1;\n        \n        //**push로 데이터 삽입시 기존데이터를 바꾼다.\n        // this.state.contents.push(\n        //   {id:this.max_content_id, title:_title, desc:_desc}\n        // )\n        // this.setState({\n        //   contents:this.state.contents\n        // })\n        \n        //**concat로 데이터 삽입시 기존데이터를 건드리지 않는다.\n        var _contents = this.state.contents.concat(\n          {id:this.max_content_id, title:_title, desc:_desc}\n        )\n        this.setState({\n          contents:_contents\n        })\n       \n        \n\n      }.bind(this)}></UpdateContent>\n    }\n\n\n    return _article;\n\n  }\n  //render함수는 props, state값이 바뀌면 재호출 되도록 되어있다.(화면이 다시 그려진다.)\n  render() {\n    \n    return (\n      <div className=\"App\">\n        {/* <Subject title={this.state.subject.title} sub={this.state.subject.sub}></Subject>\n        <Subject title=\"React\" sub=\"For UI\"></Subject> */}\n        <header>\n          <h1><a href=\"/\" onClick={function(e){\n            console.log(e);\n            e.preventDefault();\n            //this.state.mode = 'welcome';\n            this.setState({\n              mode:'welcome'\n            });\n          }.bind(this)}>{this.state.subject.title}</a></h1>  \n          {this.state.subject.sub}       \n        </header>\n        <Toc onChangePage={function(id){          \n          // debugger;\n          this.setState({\n            mode:'read',\n            selected_content_id:Number(id)\n          });\n          \n        }.bind(this)} data={this.state.contents}></Toc>\n        <Control onChangeMode={function(_mode){\n          this.setState({\n            mode:_mode\n          });\n        }.bind(this)}></Control>\n        {this.getContent()}\n      </div>\n    );    \n  }\n}\n\nexport default App;\n","C:\\Users\\JEON\\ReactProjects\\react_tutorial1\\src\\components\\TOC.js",[],"C:\\Users\\JEON\\ReactProjects\\react_tutorial1\\src\\components\\SUBJECT.js",[],"C:\\Users\\JEON\\ReactProjects\\react_tutorial1\\src\\components\\Control.js",[],"C:\\Users\\JEON\\ReactProjects\\react_tutorial1\\src\\components\\ReadCONTENT.js",[],"C:\\Users\\JEON\\ReactProjects\\react_tutorial1\\src\\components\\CreateCONTENT.js",[],"C:\\Users\\JEON\\ReactProjects\\react_tutorial1\\src\\components\\UpdateCONTENT.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":6,"column":8,"nodeType":"50","messageId":"51","endLine":6,"endColumn":15},{"ruleId":"52","severity":1,"message":"53","line":37,"column":9,"nodeType":"54","messageId":"55","endLine":37,"endColumn":15},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'Subject' is defined but never used.","Identifier","unusedVar","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-global-assign","no-unsafe-negation"]